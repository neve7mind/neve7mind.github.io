
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Murashov I.V. - student of the Faculty of Physics, Mathematics and Natural Sciences of the Peoples’ Friendship University of Russia. What I’ve never done in my life, I’ve become a member of the programming community, so I’m drifting here and I like it.\n","date":1710460800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1710460800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Murashov I.V. - student of the Faculty of Physics, Mathematics and Natural Sciences of the Peoples’ Friendship University of Russia. What I’ve never done in my life, I’ve become a member of the programming community, so I’m drifting here and I like it.","tags":null,"title":"Murashov I.V.","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Hugo Blox Builder’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://neve7mind.github.io/en/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/en/talk/example-talk/","section":"event","summary":"An example talk using Hugo Blox Builder's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"The aim of the project Write a computer program containing\nDescription of the structure containing fields such as string, int, double; a set of functions to work with the list based on this structure: Add an item to the top of the list; Add an element to the end of the list; Add an element to the list after the specified element; Add an item to the list before a given item; Remove an item with a specified name from the list; Display list contents on the screen; is a main function that contains a list script that uses the developed toolkit. Project preview In this project, I created a simple-linked list, each node of which stores the data of a certain person: name, height and weight. The set of functions specified in the project objectives was realized.\nThe whole project can be seen in the very near future HERE.\nHow did I do it anyway? We declare the structure of the node containing 3 fields (string, int, double) and a reference to the next element. struct Human { string name; int growth; double weight; Human* next; }; We can add an item to the top of the list. We transmit the link to the pointer of the first element and the field of our structure (hereinafter «basic parameters»). Create a new object of type Human, its address is assigned to the variable (newNode) Then “put” into the function basic parameters passed to functions. Set the new node link to the list’s head (pNode) and set the new node as the list head. void AddFirst(Human* \u0026amp;pNode, string name, int growth, double weight) { Human* newNode = new Human; newNode-\u0026gt;name = name; newNode-\u0026gt;growth = growth; newNode-\u0026gt;weight = weight; newNode-\u0026gt;next = pNode; pNode=newNode; } We implement the function of adding an element to the end of the list. We pass the reference to the pointer of the first element and basic parameters. Create a new object of type Human, its address is assigned variable (newNode). Next, “put” in the function basic parameters and set the link of the new node to the list’s head (pNode). If we have an empty list, we essentially create the 1st element. Else we look for the last element, then put the tmp address of the last element of the list. void AddLast(Human* \u0026amp;pNode, string name, int growth, double weight) { Human* newNode = new Human; newNode-\u0026gt;name = name; newNode-\u0026gt;growth = growth; newNode-\u0026gt;weight = weight; newNode-\u0026gt;next = pNode; if (pNode == nullptr) { newNode-\u0026gt;next = nullptr; pNode = newNode; } else { Human* tmp = pNode; while (tmp-\u0026gt;next != nullptr) tmp = tmp-\u0026gt;next; newNode-\u0026gt;next = nullptr; tmp-\u0026gt;next=newNode; } } We can add an element after the specified element. Pass the pointer to the first element to copy the external object (pNode), the string on which the node will be searched and the basic parameters. If we have an empty list, we will display a message about it. We are looking for the element we need, i.e. we set the top of the list and move on the list. If you have reached the last element and have not found the desired one, we will display the corresponding message. void AddAfter (Human* pNode, string Node, string name, int growth, double weight) { if (pNode == nullptr) { cout \u0026lt;\u0026lt; \u0026#34;This list is empty\\n\u0026#34;; return; } Human* tmp = pNode; while (tmp-\u0026gt;next != nullptr and tmp-\u0026gt;name != Node) tmp = tmp-\u0026gt;next; if (tmp-\u0026gt;next == nullptr and tmp-\u0026gt;name != Node) { cout \u0026lt;\u0026lt; \u0026#34;No element in the list\\n\u0026#34;; return; } Human* newNode = new Human; newNode-\u0026gt;name = name; newNode-\u0026gt;growth = growth; newNode-\u0026gt;weight = weight; newNode-\u0026gt;next = pNode-\u0026gt;next; pNode-\u0026gt;next = newNode; } We can add an element before the specified one. Pass the pointer to the first element to copy the external object (pNode), the string on which the node will be searched and the basic parameters. If we have an empty list, we will display a message about this. If the first element is the search element, we call the AddFirst function. Create variables that store references to previous (prev) and subsequent (tmp) elements. Then cycle to find the desired node (Node). If you have reached the last element and have not found the desired one, we will display the corresponding message. If found, we perform standard actions by filling the new node and setting the next field to tmp, and the next y prev field installs to the newly created node. void AddBefore(Human* pNode, string Node, string name, int growth, double weight) { if (pNode == nullptr) { cout \u0026lt;\u0026lt; \u0026#34;This list is empty\\n\u0026#34;; return; } if (pNode-\u0026gt;name == Node) { AddFirst(pNode, name, growth, weight); return; } Human *prev = pNode, *tmp = pNode-\u0026gt;next; while (tmp-\u0026gt;next != nullptr and tmp-\u0026gt;name != Node) { tmp = tmp-\u0026gt;next; prev = prev-\u0026gt;next; } if (tmp-\u0026gt;next == nullptr and tmp-\u0026gt;name != Node) { cout \u0026lt;\u0026lt; \u0026#34;No element in the list\\n\u0026#34;; return; } Human* newNode = new Human; newNode-\u0026gt;name = name; newNode-\u0026gt;growth = growth; newNode-\u0026gt;weight = weight; newNode-\u0026gt;next = tmp; prev-\u0026gt;next = newNode; } We implement the node deletion function by name (name). We pass the reference to the pointer of the first element and the string on which the node will be searched. If …","date":1715299200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1715299200,"objectID":"541c59caad9f6539930df244faacfd92","permalink":"https://neve7mind.github.io/en/project/project1_soft_eng_lab1/","publishdate":"2024-05-10T00:00:00Z","relpermalink":"/en/project/project1_soft_eng_lab1/","section":"project","summary":"In this project I will explain with an example how simple-link lists in the programming language C++","tags":["Deep Learning"],"title":"Implementation of Simply Linked Lists in C++","type":"project"},{"authors":null,"categories":null,"content":"Hugo Blox Builder is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you’ll find some examples of the types of technical content that can be rendered with Wowchemy.\nExamples Code Wowchemy supports a Markdown extension for highlighting code syntax. You can customize the styles under the syntax_highlighter option in your config/_default/params.yaml file.\n```python import pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() ``` renders as\nimport pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() Mindmaps Wowchemy supports a Markdown extension for mindmaps.\nSimply insert a Markdown markmap code block and optionally set the height of the mindmap as shown in the example below.\nA simple mindmap defined as a Markdown list:\n```markmap {height=\u0026#34;200px\u0026#34;} - Hugo Modules - wowchemy - blox-plugins-netlify - blox-plugins-netlify-cms - blox-plugins-reveal ``` renders as\n- Hugo Modules - wowchemy - blox-plugins-netlify - blox-plugins-netlify-cms - blox-plugins-reveal A more advanced mindmap with formatting, code blocks, and math:\n```markmap - Mindmaps - Links - [Wowchemy Docs](https://docs.hugoblox.com/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/HugoBlox/hugo-blox-builder) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ ``` renders as\n- Mindmaps - Links - [Wowchemy Docs](https://docs.hugoblox.com/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/HugoBlox/hugo-blox-builder) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ Charts Wowchemy supports the popular Plotly format for interactive charts.\nSave your Plotly JSON in your page folder, for example line-chart.json, and then add the {{\u0026lt; chart data=\u0026#34;line-chart\u0026#34; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\nYou might also find the Plotly JSON Editor useful.\nMath Wowchemy supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.yaml file.\nTo render inline or block math, wrap your LaTeX math with {{\u0026lt; math \u0026gt;}}$...${{\u0026lt; /math \u0026gt;}} or {{\u0026lt; math \u0026gt;}}$$...$${{\u0026lt; /math \u0026gt;}}, respectively. (We wrap the LaTeX math in the Wowchemy math shortcode to prevent Hugo rendering our math as Markdown. The math shortcode is new in v5.5-dev.)\nExample math block:\n{{\u0026lt; math \u0026gt;}} $$ \\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2} $$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$ Example inline math {{\u0026lt; math \u0026gt;}}$\\nabla F(\\mathbf{x}_{n})${{\u0026lt; /math \u0026gt;}} renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the math linebreak (\\\\):\n{{\u0026lt; math \u0026gt;}} $$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$ {{\u0026lt; /math \u0026gt;}} renders as\n$$ f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases} $$ Diagrams Wowchemy supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ``` renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ``` renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ``` renders as\ngantt section …","date":1711670400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1711670400,"objectID":"4044730c40573330b7db3feec18bcd39","permalink":"https://neve7mind.github.io/en/post/post4_markdown/","publishdate":"2024-03-29T00:00:00Z","relpermalink":"/en/post/post4_markdown/","section":"post","summary":"Hugo Blox Builder is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Markup language Markdown","type":"post"},{"authors":["Murashov I.V."],"categories":["Demo"],"content":"About Version Control What is “version control”, and why should you care? Version control is a system that records changes to a file or set of files over time so that you can recall specific versions later. For the examples in this book, you will use software source code as the files being version controlled, though in reality you can do this with nearly any type of file on a computer.\nLocal Version Control Systems Many people’s version-control method of choice is to copy files into another directory (perhaps a time-stamped directory, if they’re clever). This approach is very common because it is so simple, but it is also incredibly error prone. It is easy to forget which directory you’re in and accidentally write to the wrong file or copy over files you don’t mean to.\nTo deal with this issue, programmers long ago developed local VCSs that had a simple database that kept all the changes to files under revision control.\nCentralized Version Control Systems The next major issue that people encounter is that they need to collaborate with developers on other systems. To deal with this problem, Centralized Version Control Systems (CVCSs) were developed. These systems (such as CVS, Subversion, and Perforce) have a single server that contains all the versioned files, and a number of clients that check out files from that central place. For many years, this has been the standard for version control.\nThis setup offers many advantages, especially over local VCSs. For example, everyone knows to a certain degree what everyone else on the project is doing. Administrators have fine-grained control over who can do what, and it’s far easier to administer a CVCS than it is to deal with local databases on every client.\nHowever, this setup also has some serious downsides. The most obvious is the single point of failure that the centralized server represents. If that server goes down for an hour, then during that hour nobody can collaborate at all or save versioned changes to anything they’re working on. If the hard disk the central database is on becomes corrupted, and proper backups haven’t been kept, you lose absolutely everything — the entire history of the project except whatever single snapshots people happen to have on their local machines. Local VCSs suffer from this same problem — whenever you have the entire history of the project in a single place, you risk losing everything.\nDistributed Version Control Systems This is where Distributed Version Control Systems (DVCSs) step in. In a DVCS (such as Git, Mercurial or Darcs), clients don’t just check out the latest snapshot of the files; rather, they fully mirror the repository, including its full history. Thus, if any server dies, and these systems were collaborating via that server, any of the client repositories can be copied back up to the server to restore it. Every clone is really a full backup of all the data.\nFurthermore, many of these systems deal pretty well with having several remote repositories they can work with, so you can collaborate with different groups of people in different ways simultaneously within the same project. This allows you to set up several types of workflows that aren’t possible in centralized systems, such as hierarchical models.\n","date":1710460800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1710460800,"objectID":"58d7550e5042cd731e56ca255aaf453a","permalink":"https://neve7mind.github.io/en/post/post2_git/","publishdate":"2024-03-15T00:00:00Z","relpermalink":"/en/post/post2_git/","section":"post","summary":"In this post I will talk about the git version control system.","tags":["Academic"],"title":"Git version control","type":"post"},{"authors":["Murashov I.V."],"categories":["Demo"],"content":"Monday is a hard day I’ve been visiting my parents since Saturday. Joined an online lecture, but instead of going to bed like every good student would, he took the initiative at the top and presented a report on operating system processes.\nIn the afternoon I returned to Moscow. More suburban train I hate only 2 commuter trains. The smell of phantom feces, wherever they sit, the provincials arguing about what beers they will open after the next stop, the great relocation of hares to neighboring carriages when conductors, aggressive grannies, privatized 2 rows and praising the authoritarian regime, established in the country (during the time of Stalin, of course). In order to somehow endure such manifestations of the aforementioned mass, I put on headphones and it saves… But not for long: every 2 stations at the beginning of the car begin to appear county commentators with loudspeakers, from which, the eardrums burst like balloons launched at the Kremlin, and ears twisted into a tube. They seem to have everything: a raincoat, a towel, swimming trunks, a welding machine, ice cream, headphones, a Makarov pistol and contraceptives (I think the most necessary for the carriage contingent) - as they say, everything - from a loaf to a condom, and all of a hundred rubles. I think the only thing they don’t have is another salesman.\nAfter an hour on the train and half an hour on the bus, I find myself at home, where I translate my spirit and sit down to do my homework.\nTuesday and Wednesday are hard days The night before, having decided to make a difference in my life, I got up at 6:00 in the morning, sleeping the most five hours in the last week. With closed eyes he made coffee and a lab. I went to volleyball and in the evening I met my brother in the craft - a friend-masochist programmer. Overnight we wrote in Java. After a 1.5-hour sleep, he came to the university, where he died two couples in a row. Having failed, he went home to sleep, but since there is a lot of work, and in a day of only 24 hours (which genius came up with this!?), the day’s sleep made up a couple of hours, after which I did my hw.\nThursday is a hard day either I went to couples, after which I taught mathematics to my sadistic student. Briefly about him: this creature is not deprived of a sense of humor, and therefore for two hours I was a boiling kettle with red eyes (from lack of sleep!). Yes, yes, I had to edit all the puzzles in which the answer resembled at least the number 300. You just can’t imagine how much excitement this beautiful creature has had every time it’s reminded me that killing is worth eight to 20 years, because that’s the only thing that’s kept me sitting in place since these stupid theses like ‘2 {0.5} = 1’, “You can’t hit kids” and all that crap.\nHaving heroically gone through these trials, I went to bed exhausted.\nFriday - so we survived Extremely happy, since I realize that the work week has ended and the working weekend has begun.\nConclusions I repent, I am sinful. I could have done much more if I had planned my time correctly and restored the regime. But in order to do that, we have to do all the labs, and in order to do all the labs, we have to find time for them, and in order to do them, we have to do all the labs, we have to…\nI wish everyone peace and goodness.\n","date":1710460800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1710460800,"objectID":"d9a0b62a8071532953c37580186ec0e6","permalink":"https://neve7mind.github.io/en/post/post1_last-week/","publishdate":"2024-03-15T00:00:00Z","relpermalink":"/en/post/post1_last-week/","section":"post","summary":"So I’m going to tell you what I’ve been doing this week, and I’m going to analyze it.","tags":["Academic"],"title":"How was my week?","type":"post"},{"authors":null,"categories":null,"content":"from IPython.core.display import Image Image(\u0026#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png\u0026#39;) print(\u0026#34;Welcome to Academic!\u0026#34;) Welcome to Academic! Organize your notebooks Place the notebooks that you would like to publish in a notebooks folder at the root of your website.\nImport the notebooks into your site pipx install academic academic import \u0026#39;notebooks/**.ipynb\u0026#39; content/post/ --verbose The notebooks will be published to the folder you specify above. In this case, they will be published to your content/post/ folder.\n","date":1699056000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1699056000,"objectID":"94fa5e486d3bf3e0941e2ff6e7126c06","permalink":"https://neve7mind.github.io/en/post/blog-with-jupyter/","publishdate":"2023-11-04T00:00:00Z","relpermalink":"/en/post/blog-with-jupyter/","section":"post","summary":"Easily blog from Jupyter notebooks!","tags":null,"title":"Blog with Jupyter Notebooks!","type":"post"},{"authors":["Murashov I.V."],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example. Add the publication’s full text or supplementary notes here. You can use rich formatting such as including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://neve7mind.github.io/en/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/en/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Hugo Blox Builder Hugo Blox Builder | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://neve7mind.github.io/en/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/en/slides/example/","section":"slides","summary":"An introduction to using Hugo Blox Builder's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Murashov I.V.","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Add the publication’s full text or supplementary notes here. You can use rich formatting such as including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://neve7mind.github.io/en/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/en/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Murashov I.V.","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Add the publication’s full text or supplementary notes here. You can use rich formatting such as including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://neve7mind.github.io/en/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/en/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]